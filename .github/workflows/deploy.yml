name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      deployUrl: ${{ steps.deploy.outputs.deployUrl }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: corepack enable

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Cache for Next
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nextjs-

      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - id: deploy
        name: Deploy Project Artifacts to Vercel
        run: |
          DEPLOY_URL=$(vercel deploy --prebuilt --prod --skip-domain --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployUrl=$DEPLOY_URL" >> "$GITHUB_OUTPUT"

  promote:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.41.2
    needs:
      - deploy
    env:
      HOME: /root
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: corepack enable

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Promote the Deployment
        run: vercel promote ${{needs.deploy.outputs.deployUrl}} --scope=${{ secrets.VERCEL_ORG_ID }} --token=${{ secrets.VERCEL_TOKEN }}
